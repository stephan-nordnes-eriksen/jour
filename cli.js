#!/usr/bin/env node
import meow from 'meow';
// import unicornFun from 'unicorn-fun';
import fs from 'fs'
import path from 'path'
import { fileURLToPath } from 'url';
import { openFile } from './crossPlatformFileOpener.js';

const cli = meow(`
	Usage
	  $ journal <input>

	Options
	  --postfix  Lorem ipsum  [Default: rainbows]

	Examples
	  $ journal setup <storage-folder>
	  Setup your journal to target this folder
	  $ journal new
	  creates a new journal entry, tagged today.
`, {
	// input: ['setup', 'new'],
	importMeta: import.meta,
	flags: {
		postfix: {
			type: 'string',
			default: 'rainbows'
		}
	}
});

const randomAwesomeShorts = [
	"Ran a marathon",
	"Had dinner with family",
	"Hiked a mountain",
]
function journalTemplate(currentDate){
	const currentDateString = currentDate.toDateString()
	return `Journal - ${currentDateString}
# Short
	${randomAwesomeShorts[Math.round(Math.random() * randomAwesomeShorts.length)]}
# Long
	...

Generated by Journal.cli
`
}
function getJournalSettingsPath(){
	return path.join(__dirname, 'journal.settings')
}
function getJournalPath(){
	const settingsPath = getJournalSettingsPath()
	if(!fs.existsSync(settingsPath)){
		return ""
	}
	return fs.readFileSync(settingsPath).toString()
}
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

switch (cli.input[0]) {
	case 'setup':
		const journalPath = cli.input[1]
		if(!journalPath){
			print('Please provide a valid path')
			break
		}
		let absoluteJournalPath = journalPath
		if(!fs.existsSync(journalPath)){
			absoluteJournalPath = fileURLToPath(path.join(process.cwd(), journalPath))
		} else {
			absoluteJournalPath = fs.realpathSync(absoluteJournalPath)
		}
		fs.writeFileSync(getJournalSettingsPath(), absoluteJournalPath)
		console.log('Journal location saved to', absoluteJournalPath)
		break
	case 'list':

	case 'new':

	default:
		const journalDirectory = getJournalPath()
		if(!journalDirectory || !fs.existsSync(journalDirectory)) {
			console.log('Journal directory not available. Setup with `journal setup <path>`')
			break
		}
		const currentDate = new Date()
		const template = journalTemplate(currentDate)
		const journalEntryPath = path.join(journalDirectory, `journal-${currentDate.toDateString().split(' ').join('-')}.md`)
		fs.writeFileSync(journalEntryPath, template)
		openFile(journalEntryPath)
		console.log('Journal set created at', journalEntryPath)
		break
}
